Line    | Lexeme         | Token Type
--------------------------------------------------
1       | /@             | COMMENT_START
1       |  This is main function | COMMENT_CONTENT
1       | @/             | COMMENT_END
2       | NOReturn       | VOID
2       | decrease       | IDENTIFIER
2       | (              | BRACE
2       | )              | BRACE
2       | {              | BRACE
3       | int            | INTEGER
3       | 3num           | INVALID_IDENTIFIER (Error)
3       | =              | ASSIGNMENT_OP
3       | 5              | INTEGER
3       | ;              | SEMICOLON
4       | RepeatWhen     | IDENTIFIER
4       | (              | BRACE
4       | counter        | IDENTIFIER
4       | <              | RELATIONAL_OP
4       | num            | IDENTIFIER
4       | )              | BRACE
4       | {              | BRACE
5       | reg3           | IDENTIFIER
5       | =              | ASSIGNMENT_OP
5       | reg3           | IDENTIFIER
5       | -              | ADDOP
5       | 1              | INTEGER
5       | ;              | SEMICOLON
6       | }              | BRACE
7       | }              | BRACE
7       |                | EOF_TOKEN

Total Number of lexical errors: 1

Parser Results:
--------------------------------------------------
Line : 1 Matched Rule used: Comment
Line : 3 Not Matched Error: Unexpected token 'int'
Line : 4 Not Matched Error: Unexpected token 'RepeatWhen'
Line : 4 Not Matched Error: Unexpected token '<'
Line : 4 Not Matched Error: Unexpected token '{'
Line : 4 Matched Rule used: expression-stmt
Line : 5 Not Matched Error: Unexpected token '1'
Line : 6 Not Matched Error: Unexpected token '}'
Line : 5 Matched Rule used: expression-stmt
Line : 4 Matched Rule used: compound-stmt
Line : 2 Matched Rule used: fun-declaration
Total NO of errors: 6
